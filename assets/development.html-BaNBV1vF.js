import{_ as n,c as a,a as s,o as l}from"./app-CKexX01n.js";const i={};function t(r,e){return l(),a("div",null,e[0]||(e[0]=[s(`<h1 id="setup-and-development" tabindex="-1"><a class="header-anchor" href="#setup-and-development"><span>Setup and development</span></a></h1><ul><li><a href="#setup-and-development">Setup and development</a><ul><li><a href="#first-time-setup">First-time setup</a></li><li><a href="#installation">Installation</a><ul><li><a href="#database">Database</a></li><li><a href="#configuration">Configuration</a></li><li><a href="#dev-server">Dev server</a></li></ul></li><li><a href="#generators">Generators</a></li><li><a href="#docker">Docker</a><ul><li><a href="#docker-installation">Docker installation</a></li><li><a href="#docker-compose-installation">Docker-compose installation</a></li><li><a href="#run">Run</a></li></ul></li></ul></li></ul><h2 id="first-time-setup" tabindex="-1"><a class="header-anchor" href="#first-time-setup"><span>First-time setup</span></a></h2><p>Make sure you have the following installed:</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">Node</a> (at least the latest LTS)</li><li><a href="https://yarnpkg.com/lang/en/docs/install/" target="_blank" rel="noopener noreferrer">Yarn</a> (at least 1.0)</li></ul><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Install dependencies from package.json</span></span>
<span class="line"><span class="token function">yarn</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Note: don&#39;t delete yarn.lock before installation, See more <a href="https://classic.yarnpkg.com/en/docs/yarn-lock/" target="_blank" rel="noopener noreferrer">in yarn docs</a></p></blockquote><h3 id="database" tabindex="-1"><a class="header-anchor" href="#database"><span>Database</span></a></h3><blockquote><p>Note: Awesome NestJS Boilerplate uses <a href="https://github.com/typeorm/typeorm" target="_blank" rel="noopener noreferrer">TypeORM</a> with Data Mapper pattern.</p></blockquote><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><p>Before start install PostgreSQL and fill correct configurations in <code>.env</code> file</p><div class="language-env line-numbers-mode" data-highlighter="prismjs" data-ext="env" data-title="env"><pre><code><span class="line">DB_HOST=localhost</span>
<span class="line">DB_PORT=5432</span>
<span class="line">DB_USERNAME=postgres</span>
<span class="line">DB_PASSWORD=postgres</span>
<span class="line">DB_DATABASE=nest_boilerplate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Some helper script to work with database</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># To create new migration file</span></span>
<span class="line"><span class="token function">yarn</span> migration:create migration_name</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Truncate full database (note: it isn&#39;t deleting the database)</span></span>
<span class="line"><span class="token function">yarn</span> schema:drop</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Generate migration from update of entities</span></span>
<span class="line"><span class="token function">yarn</span> migration:generate migration_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>MySQL</span></a></h4><p>If you need to use MySQL / MariaDB instead of PostgreSQL, follow the steps below:</p><blockquote><p>(assuming you have installed mysql in your system and it is running on port 3306)</p></blockquote><ol><li>Make the following entries in the #DB section in <code>.env</code> file</li></ol><div class="language-env line-numbers-mode" data-highlighter="prismjs" data-ext="env" data-title="env"><pre><code><span class="line">#== DB</span>
<span class="line">DB_TYPE=mysql</span>
<span class="line">DB_HOST=127.0.0.1</span>
<span class="line">DB_PORT=3306</span>
<span class="line">DB_USERNAME=mysql</span>
<span class="line">DB_PASSWORD=mysql</span>
<span class="line">DB_DATABASE=nest_boilerplate</span>
<span class="line">DB_ROOT_PASSWORD=mysql</span>
<span class="line">DB_ALLOW_EMPTY_PASSWORD=yes</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Change the DB in TypeORM to MySQL. You can do that by heading over to the file <code>ormconfig.ts</code>.</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">...</span>
<span class="line">export const dataSource = new DataSource({</span>
<span class="line">  type: &#39;mysql&#39;, // &lt;-- Just write mysql here</span>
<span class="line">  host: process.env.DB_HOST,</span>
<span class="line">  port: Number(process.env.DB_PORT),</span>
<span class="line">  username: process.env.DB_USERNAME,</span>
<span class="line">  password: process.env.DB_PASSWORD,</span>
<span class="line">  database: process.env.DB_DATABASE,</span>
<span class="line">  namingStrategy: new SnakeNamingStrategy(),</span>
<span class="line">  subscribers: [UserSubscriber],</span>
<span class="line">  entities: [</span>
<span class="line">    &#39;src/modules/**/*.entity{.ts,.js}&#39;,</span>
<span class="line">    &#39;src/modules/**/*.view-entity{.ts,.js}&#39;,</span>
<span class="line">  ],</span>
<span class="line">  migrations: [&#39;src/database/migrations/*{.ts,.js}&#39;],</span>
<span class="line">});</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Delete all the files in migrations folder (<code>src/database/migrations</code>)</li><li>Run the following commands in the root folder of the project, to regenerate the migrations:</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">yarn typeorm migration:generate ./src/database/migrations/MySQLMigrations</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>These steps may work for <a href="https://typeorm.io/#features" target="_blank" rel="noopener noreferrer">other databases</a> supported by TypeORM. If they work, let us know and we&#39;ll add it to the docs!</p><h5 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>Docker Compose</span></a></h5><p>After completing the steps above, you can use <a href="../docker-compose_mysql.yml">this docker-compose file</a> for awesome-nest-boilerplate with MySQL (instead of PostgreSQL).</p><h3 id="dev-server" tabindex="-1"><a class="header-anchor" href="#dev-server"><span>Dev server</span></a></h3><blockquote><p>Note: If you&#39;re on Linux and see an <code>ENOSPC</code> error when running the commands below, you must <a href="https://stackoverflow.com/questions/22475849/node-js-error-enospc#answer-32600959" target="_blank" rel="noopener noreferrer">increase the number of available file watchers</a>.</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Launch the dev server</span></span>
<span class="line"><span class="token function">yarn</span> start:dev</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Launch the dev server with file watcher</span></span>
<span class="line"><span class="token function">yarn</span> watch:dev</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Launch the dev server and enable remote debugger with file watcher</span></span>
<span class="line"><span class="token function">yarn</span> debug:dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generators" tabindex="-1"><a class="header-anchor" href="#generators"><span>Generators</span></a></h2><p>This project includes generators to speed up common development tasks. Commands include:</p><blockquote><p>Note: Make sure you already have the nest-cli globally installed</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Install nest-cli globally</span></span>
<span class="line"><span class="token function">yarn</span> global <span class="token function">add</span> @nestjs/cli</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Generate a new service</span></span>
<span class="line">nest generate <span class="token function">service</span> <span class="token function">users</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Generate a new class</span></span>
<span class="line">nest g class <span class="token function">users</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Note: if you love generators then you can find full list of command in official <a href="https://docs.nestjs.com/cli/usages#generate-alias-g" target="_blank" rel="noopener noreferrer">Nest-cli Docs</a>.</p></blockquote><h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h2><p>if you are familiar with <a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">docker</a> and <a href="https://docs.docker.com/compose" target="_blank" rel="noopener noreferrer">docker-compose</a> then you can run built in docker-compose file, which will install and configure application and database for you.</p><h3 id="docker-installation" tabindex="-1"><a class="header-anchor" href="#docker-installation"><span>Docker installation</span></a></h3><p>Download docker from Official website</p><ul><li>Mac <a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener noreferrer">https://docs.docker.com/docker-for-mac/install/</a></li><li>Windows <a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noopener noreferrer">https://docs.docker.com/docker-for-windows/install/</a></li><li>Ubuntu <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener noreferrer">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></li></ul><h3 id="docker-compose-installation" tabindex="-1"><a class="header-anchor" href="#docker-compose-installation"><span>Docker-compose installation</span></a></h3><p>Download docker from <a href="https://docs.docker.com/compose/install" target="_blank" rel="noopener noreferrer">Official website</a></p><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>Run</span></a></h3><p>Open terminal and navigate to project directory and run the following command.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">3000</span> <span class="token function">docker-compose</span> up</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Note: application will run on port 3000 (<a href="http://localhost:3000" target="_blank" rel="noopener noreferrer">http://localhost:3000</a>)</p></blockquote><p>Navigate to <a href="http://localhost:8080" target="_blank" rel="noopener noreferrer">http://localhost:8080</a> and connect to you database with the following configurations</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">host: postgres</span>
<span class="line">user: postgres</span>
<span class="line">pass: postgres</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>create database <code>nest_boilerplate</code> and your application fully is ready to use.</p>`,49)]))}const c=n(i,[["render",t],["__file","development.html.vue"]]),d=JSON.parse('{"path":"/docs/development.html","title":"Setup and development","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"First-time setup","slug":"first-time-setup","link":"#first-time-setup","children":[]},{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[{"level":3,"title":"Database","slug":"database","link":"#database","children":[]},{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Dev server","slug":"dev-server","link":"#dev-server","children":[]}]},{"level":2,"title":"Generators","slug":"generators","link":"#generators","children":[]},{"level":2,"title":"Docker","slug":"docker","link":"#docker","children":[{"level":3,"title":"Docker installation","slug":"docker-installation","link":"#docker-installation","children":[]},{"level":3,"title":"Docker-compose installation","slug":"docker-compose-installation","link":"#docker-compose-installation","children":[]},{"level":3,"title":"Run","slug":"run","link":"#run","children":[]}]}],"git":{"updatedTime":1670659735000,"contributors":[{"name":"narek","username":"narek","email":"narek.hakobyan.07@gmail.com","commits":6,"url":"https://github.com/narek"},{"name":"Mohamad Jahani","username":"Mohamad Jahani","email":"m4m4lj@gmail.com","commits":1,"url":"https://github.com/Mohamad Jahani"},{"name":"Narek","username":"Narek","email":"narek.hakobyan.07@gmail.com","commits":1,"url":"https://github.com/Narek"},{"name":"Saad A. Bazaz","username":"Saad A. Bazaz","email":"saadbazaz@hotmail.com","commits":3,"url":"https://github.com/Saad A. Bazaz"}]},"filePathRelative":"docs/development.md"}');export{c as comp,d as data};
