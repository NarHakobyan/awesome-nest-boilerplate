import{_ as r,c as n,a as s,b as l,d as a,e as t,f as i,r as c,o as d}from"./app-CKexX01n.js";const h={};function p(u,e){const o=c("RouteLink");return d(),n("div",null,[e[3]||(e[3]=s('<h1 id="architecture" tabindex="-1"><a class="header-anchor" href="#architecture"><span>Architecture</span></a></h1><ul><li><a href="#architecture">Architecture</a><ul><li><a href="#githubworkflows"><code>.github/workflows</code></a><ul><li><a href="#lintyml"><code>lint.yml</code></a></li></ul></li><li><a href="#husky"><code>.husky</code></a></li><li><a href="#vscode"><code>.vscode</code></a></li><li><a href="#docs"><code>docs</code></a></li><li><a href="#vuepress"><code>.vuepress</code></a></li><li><a href="#src"><code>src</code></a><ul><li><a href="#common"><code>common</code></a></li><li><a href="#database"><code>database</code></a><ul><li><a href="#migrations"><code>migrations</code></a></li><li><a href="#factories"><code>factories</code></a></li><li><a href="#seeds"><code>seeds</code></a></li></ul></li><li><a href="#decorators"><code>decorators</code></a></li><li><a href="#filters"><code>filters</code></a></li><li><a href="#guards"><code>guards</code></a></li><li><a href="#i18n"><code>i18n</code></a></li><li><a href="#interceptors"><code>interceptors</code></a></li><li><a href="#interfaces"><code>interfaces</code></a></li><li><a href="#providers"><code>providers</code></a></li><li><a href="#shared"><code>shared</code></a></li><li><a href="#modules"><code>modules</code></a></li><li><a href="#appmodulets"><code>app.module.ts</code></a></li><li><a href="#boilerplatepolyfillts"><code>boilerplate.polyfill.ts</code></a></li><li><a href="#snake-namingstrategyts"><code>snake-naming.strategy.ts</code></a></li></ul></li><li><a href="#tests"><code>tests</code></a></li><li><a href="#dockerignore"><code>.dockerignore</code></a></li><li><a href="#env"><code>.env</code></a></li><li><a href="#eslintrcjs"><code>.eslintrc.js</code></a></li><li><a href="#docker-composeyml"><code>docker-compose.yml</code></a></li><li><a href="#dockerfile"><code>Dockerfile</code></a></li><li><a href="#ormconfigts"><code>ormconfig.ts</code></a></li></ul></li></ul><h2 id="github-workflows" tabindex="-1"><a class="header-anchor" href="#github-workflows"><span><code>.github/workflows</code></span></a></h2><p>Here you can create and store yml files for each github action.</p><h3 id="lint-yml" tabindex="-1"><a class="header-anchor" href="#lint-yml"><span><code>lint.yml</code></span></a></h3><p>Github action to run and show linter errors on each Pull request, by default it scans every pull request and push to main, develop or master branches.</p><h2 id="husky" tabindex="-1"><a class="header-anchor" href="#husky"><span><code>.husky</code></span></a></h2><p>Folder which stores github hooks, by default it contains pre-commit hook which prevents push without fixing linter errors.</p><h2 id="vscode" tabindex="-1"><a class="header-anchor" href="#vscode"><span><code>.vscode</code></span></a></h2>',9)),l("p",null,[e[1]||(e[1]=a("Settings and extensions specific to this project, for Visual Studio Code. See ")),t(o,{to:"/docs/editors.html#visual-studio-code"},{default:i(()=>e[0]||(e[0]=[a("the editors doc")])),_:1}),e[2]||(e[2]=a(" for more."))]),e[4]||(e[4]=s(`<h2 id="docs" tabindex="-1"><a class="header-anchor" href="#docs"><span><code>docs</code></span></a></h2><p>You found me! ðŸ˜‰</p><h2 id="vuepress" tabindex="-1"><a class="header-anchor" href="#vuepress"><span><code>.vuepress</code></span></a></h2><p>Documentation config and destination folder See <a href="https://vuepress.vuejs.org" target="_blank" rel="noopener noreferrer">VuePress doc</a> for more</p><h2 id="src" tabindex="-1"><a class="header-anchor" href="#src"><span><code>src</code></span></a></h2><p>Where we keep all our source files.</p><h3 id="common" tabindex="-1"><a class="header-anchor" href="#common"><span><code>common</code></span></a></h3><p>Where we keep common typescript files, e.g. constants and DTOs.</p><h3 id="database" tabindex="-1"><a class="header-anchor" href="#database"><span><code>database</code></span></a></h3><p>Folder to store files which are connected only to database.</p><h4 id="migrations" tabindex="-1"><a class="header-anchor" href="#migrations"><span><code>migrations</code></span></a></h4><p>Folder to store application migrations which will be generated by typeorm.</p><h4 id="factories" tabindex="-1"><a class="header-anchor" href="#factories"><span><code>factories</code></span></a></h4><p>Factories are used to create entities which will be used in seeds.</p><h4 id="seeds" tabindex="-1"><a class="header-anchor" href="#seeds"><span><code>seeds</code></span></a></h4><p>Folder to store application seeds, it adds necessary data for the development.</p><h3 id="decorators" tabindex="-1"><a class="header-anchor" href="#decorators"><span><code>decorators</code></span></a></h3><p>This folder contains all global <a href="https://www.typescriptlang.org/docs/handbook/decorators.html" target="_blank" rel="noopener noreferrer">decorators</a>.</p><h3 id="filters" tabindex="-1"><a class="header-anchor" href="#filters"><span><code>filters</code></span></a></h3><p>In this folder you can find app level <a href="https://docs.nestjs.com/exception-filters" target="_blank" rel="noopener noreferrer">filters</a>.</p><h3 id="guards" tabindex="-1"><a class="header-anchor" href="#guards"><span><code>guards</code></span></a></h3><p>You can store all guards here.</p><h3 id="i18n" tabindex="-1"><a class="header-anchor" href="#i18n"><span><code>i18n</code></span></a></h3><p>Internalization JSON files are storied here.</p><h3 id="interceptors" tabindex="-1"><a class="header-anchor" href="#interceptors"><span><code>interceptors</code></span></a></h3><p>Where we are keep <a href="https://docs.nestjs.com/interceptors" target="_blank" rel="noopener noreferrer">interceptors</a>.</p><h3 id="interfaces" tabindex="-1"><a class="header-anchor" href="#interfaces"><span><code>interfaces</code></span></a></h3><p>This folder contains typescript <a href="https://www.typescriptlang.org/docs/handbook/interfaces.html" target="_blank" rel="noopener noreferrer">interfaces</a></p><h3 id="providers" tabindex="-1"><a class="header-anchor" href="#providers"><span><code>providers</code></span></a></h3><p>These are utility functions you may want to share between many files in your application. They will always be pure and never have side effects, meaning if you provide a function the same arguments, it will always return the same result.</p><h3 id="shared" tabindex="-1"><a class="header-anchor" href="#shared"><span><code>shared</code></span></a></h3><p>Shared module with global singleton services.</p><h3 id="modules" tabindex="-1"><a class="header-anchor" href="#modules"><span><code>modules</code></span></a></h3><p>Where all our NestJS modules lives. See <a href="https://docs.nestjs.com/modules" target="_blank" rel="noopener noreferrer">NestJS modules documentation</a> for more.</p><h3 id="app-module-ts" tabindex="-1"><a class="header-anchor" href="#app-module-ts"><span><code>app.module.ts</code></span></a></h3><p>The root application module.</p><h3 id="boilerplate-polyfill-ts" tabindex="-1"><a class="header-anchor" href="#boilerplate-polyfill-ts"><span><code>boilerplate.polyfill.ts</code></span></a></h3><p>We extend built in classes so you can use helper function anywhere.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> users<span class="token operator">:</span> UserEntity<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> userDtos <span class="token operator">=</span> users<span class="token punctuation">.</span><span class="token function">toDtos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="snake-naming-strategy-ts" tabindex="-1"><a class="header-anchor" href="#snake-naming-strategy-ts"><span><code>snake-naming.strategy.ts</code></span></a></h3><p>We are using snake naming strategy for typeorm, so when you will generate migration it automatically will set snake_case column name from entity fields.</p><h2 id="tests" tabindex="-1"><a class="header-anchor" href="#tests"><span><code>tests</code></span></a></h2><p>Folder where we keep all our e2e test files.</p><h2 id="dockerignore" tabindex="-1"><a class="header-anchor" href="#dockerignore"><span><code>.dockerignore</code></span></a></h2><p>List a files which will be ignored during the docker build.</p><h2 id="env" tabindex="-1"><a class="header-anchor" href="#env"><span><code>.env</code></span></a></h2><p>Environment variables which will load before app start and will be stored in <code>process.env</code>, (*) is a env name (development, test, staging, production)</p><h2 id="eslintrc-js" tabindex="-1"><a class="header-anchor" href="#eslintrc-js"><span><code>.eslintrc.js</code></span></a></h2><p>Eslint configuration file, See <a href="https://eslint.org/" target="_blank" rel="noopener noreferrer">the eslint doc</a> for more.</p><h2 id="docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#docker-compose-yml"><span><code>docker-compose.yml</code></span></a></h2><p>Docker compose configuration file, See <a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener noreferrer">the docker docs</a> for more.</p><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile"><span><code>Dockerfile</code></span></a></h2><p>basic Dockerfile configuration to build the app, See <a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener noreferrer">the docker docs</a> for more.</p><h2 id="ormconfig-ts" tabindex="-1"><a class="header-anchor" href="#ormconfig-ts"><span><code>ormconfig.ts</code></span></a></h2><p>Typeorm configuration file which is used for migrations and seeds.</p>`,55))])}const m=r(h,[["render",p],["__file","architecture.html.vue"]]),g=JSON.parse('{"path":"/docs/architecture.html","title":"Architecture","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":".github/workflows","slug":"github-workflows","link":"#github-workflows","children":[{"level":3,"title":"lint.yml","slug":"lint-yml","link":"#lint-yml","children":[]}]},{"level":2,"title":".husky","slug":"husky","link":"#husky","children":[]},{"level":2,"title":".vscode","slug":"vscode","link":"#vscode","children":[]},{"level":2,"title":"docs","slug":"docs","link":"#docs","children":[]},{"level":2,"title":".vuepress","slug":"vuepress","link":"#vuepress","children":[]},{"level":2,"title":"src","slug":"src","link":"#src","children":[{"level":3,"title":"common","slug":"common","link":"#common","children":[]},{"level":3,"title":"database","slug":"database","link":"#database","children":[]},{"level":3,"title":"decorators","slug":"decorators","link":"#decorators","children":[]},{"level":3,"title":"filters","slug":"filters","link":"#filters","children":[]},{"level":3,"title":"guards","slug":"guards","link":"#guards","children":[]},{"level":3,"title":"i18n","slug":"i18n","link":"#i18n","children":[]},{"level":3,"title":"interceptors","slug":"interceptors","link":"#interceptors","children":[]},{"level":3,"title":"interfaces","slug":"interfaces","link":"#interfaces","children":[]},{"level":3,"title":"providers","slug":"providers","link":"#providers","children":[]},{"level":3,"title":"shared","slug":"shared","link":"#shared","children":[]},{"level":3,"title":"modules","slug":"modules","link":"#modules","children":[]},{"level":3,"title":"app.module.ts","slug":"app-module-ts","link":"#app-module-ts","children":[]},{"level":3,"title":"boilerplate.polyfill.ts","slug":"boilerplate-polyfill-ts","link":"#boilerplate-polyfill-ts","children":[]},{"level":3,"title":"snake-naming.strategy.ts","slug":"snake-naming-strategy-ts","link":"#snake-naming-strategy-ts","children":[]}]},{"level":2,"title":"tests","slug":"tests","link":"#tests","children":[]},{"level":2,"title":".dockerignore","slug":"dockerignore","link":"#dockerignore","children":[]},{"level":2,"title":".env","slug":"env","link":"#env","children":[]},{"level":2,"title":".eslintrc.js","slug":"eslintrc-js","link":"#eslintrc-js","children":[]},{"level":2,"title":"docker-compose.yml","slug":"docker-compose-yml","link":"#docker-compose-yml","children":[]},{"level":2,"title":"Dockerfile","slug":"dockerfile","link":"#dockerfile","children":[]},{"level":2,"title":"ormconfig.ts","slug":"ormconfig-ts","link":"#ormconfig-ts","children":[]}],"git":{"updatedTime":1735747782000,"contributors":[{"name":"narek","username":"narek","email":"narek.hakobyan.07@gmail.com","commits":1,"url":"https://github.com/narek"},{"name":"Narek","username":"Narek","email":"narek.hakobyan.07@gmail.com","commits":2,"url":"https://github.com/Narek"}]},"filePathRelative":"docs/architecture.md"}');export{m as comp,g as data};
